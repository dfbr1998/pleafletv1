[{"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\index.js":"1","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\App\\App.js":"2","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\nav\\nav.js":"3","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\nav\\drawer.js":"4","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js":"5","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\get.js":"6","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\login\\login.js":"7","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\list\\list.js":"8","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\sendData.js":"9","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\login\\styleLogin.js":"10","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\getData.js":"11","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\notification\\notification.js":"12"},{"size":398,"mtime":1611937087000,"results":"13","hashOfConfig":"14"},{"size":116,"mtime":1611937087000,"results":"15","hashOfConfig":"14"},{"size":9605,"mtime":1611937087000,"results":"16","hashOfConfig":"14"},{"size":2408,"mtime":1611937087000,"results":"17","hashOfConfig":"14"},{"size":5958,"mtime":1611937087000,"results":"18","hashOfConfig":"14"},{"size":848,"mtime":1612221891721,"results":"19","hashOfConfig":"14"},{"size":12587,"mtime":1611937087000,"results":"20","hashOfConfig":"14"},{"size":3157,"mtime":1611937087000,"results":"21","hashOfConfig":"14"},{"size":570,"mtime":1611937087000,"results":"22","hashOfConfig":"14"},{"size":1049,"mtime":1611937087000,"results":"23","hashOfConfig":"14"},{"size":532,"mtime":1611937087000,"results":"24","hashOfConfig":"14"},{"size":1680,"mtime":1611937087000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wrjzzg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\index.js",[],["56","57"],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\App\\App.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\nav\\nav.js",["58","59","60"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DrawerNav from \"./drawer\";\nimport ZipDecode from \"../zipDecode/zipDecode\";\nimport Login from \"../login/login\";\nimport getData from \"../../until/get\";\nimport ListOrders from \"../list/list\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4000\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  rootInput: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nexport default function Nav() {\n  const [open, setOpen] = React.useState(false),\n    [zip1, setZip1] = React.useState(\"\"),\n    [zip2, setZip2] = React.useState(\"\"),\n    [city, setCity] = React.useState(\"\"),\n    [city2, setCity2] = React.useState(\"\"),\n    [state, setState] = React.useState(\"\"),\n    [state2, setState2] = React.useState(\"\"),\n    [openZip2Text, setOpenZip2Text] = React.useState(false),\n    [openZipText, setOpenZipText] = React.useState(false),\n    [redirect, setRedirect] = React.useState(\"zipcode\"),\n    [response, setResponse] = React.useState(\"\");\n  const classes = useStyles();\n  useEffect(()=>{\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"FromAPI\", data => {\n      setResponse(data);\n    });\n  },[])\n  const listEvent = (item) => {\n    setRedirect(item);\n  };\n\n  const onChangeZip1 = (e) => {\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\n\n    setZip1(onlyNums);\n  };\n  const onChangeZip2 = (e) => {\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\n\n    setZip2(onlyNums);\n  };\n  const handleChangedataCity = (e) => {\n    setCity(e.target.value);\n  };\n  const handleChangedataCity2 = (e) => {\n    setCity2(e.target.value);\n  };\n  const handleChangedataState = (e) => {\n    setState(e.target.value);\n  };\n  const handleChangedataState2 = (e) => {\n    setState2(e.target.value);\n  };\n  const ZipDecodeComponent = () => {\n    if (zip1.length === 0 || zip2.length === 0) {\n      return null;\n    } else {\n      return <ZipDecode zip1={zip1} zip2={zip2} />;\n    }\n  };\n  const getZipCodes = () => {\n    const url = `/city-zips.json/${city}/${state}`;\n    const url2 = `/city-zips.json/${city2}/${state2}`;\n    getData(url).then((response) => {\n      if (response.zip_codes.length !== 0) {\n        setZip1(response.zip_codes[0]);\n        setOpenZipText(true);\n      } else {\n        setZip1(\"no found city\");\n      }\n    });\n    getData(url2).then((response) => {\n      if (response.zip_codes.length !== 0) {\n        setZip2(response.zip_codes[0]);\n        setOpenZip2Text(true);\n      } else {\n        setZip2(\"no found city\");\n      }\n    });\n  };\n  const logOut = ()=>{\n    localStorage.removeItem('id')\n    localStorage.removeItem('user')\n    window.location.reload()\n  }\n  if (!localStorage.getItem(\"id\")) {\n    return <Login />;\n  } else {\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <DrawerNav item={listEvent} />\n            </IconButton>\n            <Typography letiant=\"h6\" className={classes.title}>\n              APP ZIPCODES\n            </Typography>\n            <Button color=\"inherit\" onClick={logOut}>Cerrar sesión</Button>\n          </Toolbar>\n        </AppBar>\n        <Grid\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"70vh\", marginTop: 8 }}\n        >\n          {redirect === \"zipcode\" ? (\n            <div>\n              <Grid item xs={12}>\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <TextField\n                      id=\"outlined-basic\"\n                      label=\"Código postal 1\"\n                      variant=\"outlined\"\n                      onChange={onChangeZip1}\n                      value={zip1}\n                      inputProps={{ maxLength: 15 }}\n                      className={classes.rootInput}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      id=\"outlined-basic\"\n                      label=\"Código postal 1\"\n                      variant=\"outlined\"\n                      onChange={onChangeZip2}\n                      value={zip2}\n                      className={classes.rootInput}\n                      inputProps={{ maxLength: 15 }}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <ZipDecodeComponent zip1={zip1} zip2={zip2} />\n              </Grid>\n            </div>\n          ) : redirect === \"bystate\" ? (\n            <div>\n              <Grid item xs={12}>\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <TextField\n                      error={zip1 === \"no found city\"}\n                      helperText={\n                        zip1 === \"no found city\"\n                          ? \"ingresa una ciudad válida\"\n                          : null\n                      }\n                      id=\"outlined-basic\"\n                      label=\"Cuidad salida\"\n                      variant=\"outlined\"\n                      onChange={handleChangedataCity}\n                      value={city}\n                      inputProps={{ maxLength: 15 }}\n                      className={classes.rootInput}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      error={zip1 === \"no found city\"}\n                      helperText={\n                        zip1 === \"no found city\"\n                          ? \"ingresa un código de estado válido\"\n                          : null\n                      }\n                      id=\"outlined-basic\"\n                      label=\"Estado\"\n                      variant=\"outlined\"\n                      onChange={handleChangedataState}\n                      value={state}\n                      inputProps={{ maxLength: 15 }}\n                      className={classes.rootInput}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <TextField\n                      error={zip2 === \"no found city\"}\n                      helperText={\n                        zip2 === \"no found city\"\n                          ? \"ingresa una ciudad válida\"\n                          : null\n                      }\n                      id=\"outlined-basic\"\n                      label=\"Cuidad Destino\"\n                      variant=\"outlined\"\n                      onChange={handleChangedataCity2}\n                      value={city2}\n                      inputProps={{ maxLength: 15 }}\n                      className={classes.rootInput}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      error={zip2 === \"no found city\"}\n                      helperText={\n                        zip2 === \"no found city\"\n                          ? \"ingresa un código de estado válido\"\n                          : null\n                      }\n                      id=\"outlined-basic\"\n                      label=\"Estado Destino\"\n                      variant=\"outlined\"\n                      onChange={handleChangedataState2}\n                      value={state2}\n                      inputProps={{ maxLength: 2 }}\n                      className={classes.rootInput}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Typography>\n                {zip1 && city && state && openZipText\n                  ? `Código postal de ${city}: ${zip1}`\n                  : null}\n              </Typography>\n              <Typography>\n                {zip2 && city2 && state2 && openZip2Text\n                  ? `Código postal de ${city2}: ${zip2}`\n                  : null}\n              </Typography>\n              {city && city2 && state && state2 ? (\n                <div style={{ marginBlock: 5 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={getZipCodes}\n                  >\n                    Consultar codigos postales\n                  </Button>\n                </div>\n              ) : null}\n              {zip1 && zip2 && city && city2 && state && state2 ? (\n                <Grid\n                  container\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                >\n                  <ZipDecodeComponent />\n                </Grid>\n              ) : null}\n            </div>\n          ) : redirect==='list'?(<ListOrders/>):null}\n        </Grid>\n      </div>\n    );\n  }\n}\n","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\nav\\drawer.js",["61"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ListIcon from '@material-ui/icons/List';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport MarkunreadMailboxIcon from '@material-ui/icons/MarkunreadMailbox';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AirportShuttleIcon from '@material-ui/icons/AirportShuttle';\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function DrawerNav(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false)\n\n const handleChangeDrawOpen = () =>{\n     open?setOpen(false):setOpen(true)\n }\nconst listEvent = (item)=>{\n    props.item(item)\n}\n  const list = () => (\n    <div\n      className={clsx(classes.list)}\n      role=\"presentation\"\n    >\n      <List>\n        <ListItem>\n            <ListItemIcon>\n                <AirportShuttleIcon/>\n            </ListItemIcon>\n            <ListItemText>\n                Route\n            </ListItemText>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button onClick={()=>listEvent('zipcode')}> \n            <ListItemIcon>\n            <MarkunreadMailboxIcon/>\n            </ListItemIcon>\n            <ListItemText>\n            Pedido por COP\n            </ListItemText>\n        </ListItem>\n<ListItem button onClick={()=>listEvent('bystate')}>\n    <ListItemIcon>\n<LocationCityIcon/>\n    </ListItemIcon>\n    <ListItemText>\n    Pedido por Ciudad\n    </ListItemText>\n</ListItem>\n<ListItem button onClick={()=>listEvent('list')}>\n    <ListItemIcon>\n    <ListIcon/>\n    </ListItemIcon>\n    <ListItemText>\n    Lista de pedidos\n    </ListItemText>\n</ListItem>\n\n\n\n\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <MenuIcon onClick={handleChangeDrawOpen}/>\n        <Drawer \n        anchor='left'\n        open={open}\n        onClose={handleChangeDrawOpen}\n        \n        >\n            {list()}\n        </Drawer>\n    </div>\n  );\n}\n","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\zipDecode\\zipDecode.js",["62","63","64"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport getData from \"../../until/get\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport sendData from \"../../until/sendData\";\nimport Notification from \"../notification/notification\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 500,\n  },\n});\nexport default function ZipDecode(props) {\n  const [distance, setDistance] = React.useState(false),\n\n  [city, setCity]  =React.useState(\"\"),\n  [city2, setCity2]  =React.useState(\"\"),\n  [state, setState] =React.useState(\"\"),\n  [state2, setState2] =React.useState(\"\"),\n    [status, setStatus] = React.useState(false),\n    [total, setTotal] = React.useState(false),\n    [toll, setToll] = React.useState(false),\n    [pricePerKm, setPricePerKm] = React.useState(false),\n    [delay, setDelay] = React.useState(false),\n    [counter, setCounter] = React.useState(60),\n    [arriveSameDay, setArriveSameDay] = React.useState(false),\n    [openN, setOpenN] = React.useState();\n  const classes = useStyles();\n\n  const priceKmFun =async (value) =>{\n    const tollSolve = value>=100?parseFloat(Number((Math.round(value/100)*0.25).toFixed(2))):false\n    const priceKm =  Number(( value*0.20).toFixed(2))\n    const Ctotal =  !tollSolve?priceKm:tollSolve+priceKm\n    const timeDelaySameDay =  Number(value/250).toFixed(2)*1000\n  \n    let hours =  Math.floor((timeDelaySameDay / 60) % 60);\n    hours =  Number((hours < 10)? '0' + hours : hours);\n    let minutes =  timeDelaySameDay % 60;\n    minutes =  Number((minutes < 10)? '0' + minutes : minutes);\n\n    if( value>250){\n        setDelay(Math.round( timeDelaySameDay/1000))\n        setArriveSameDay(false)\n    }else{\n        if(timeDelaySameDay<=100)\n        {\n            setDelay({\n                hours: 1,\n                minutes: 0\n            })\n            setArriveSameDay(true)\n        }else{\n            setDelay({\n                hours: hours,\n                minutes: minutes\n            })\n            setArriveSameDay(true)\n        }\n    }\n   \n   \n   \n  \n      \n      setPricePerKm(priceKm)\n      setToll(tollSolve)\n      setTotal(Ctotal)\n      \n   setStatus('success')\n \n   \n    \n\n    }\n    \n  const getDistance = () => {\n    const url = `/distance.json/${props.zip1}/${props.zip2}/km`;\n    getData(url).then(async(response) => {\n      if (response) {\n        setDistance(Math.round(response.distance) );\n       priceKmFun(Math.round(response.distance) )\n        \n       \n        \n       \n        console.log(JSON.stringify(response));\n      } else {\n        setStatus(\"error\");\n        console.log('error')\n      }\n    });\n    const urlzip = `/info.json/${props.zip1}/degrees`\n    const urlzip2 = `/info.json/${props.zip2}/degrees`\n    getData(urlzip).then((response)=>{\n      if(response.city){\n        setCity(response.city)\n        setState(response.state)\n      }else{\n        setCity('No info')\n        setState('No info')\n      }\n    })\n    getData(urlzip2).then((response)=>{\n      if(response.city){\n        setCity2(response.city)\n        setState2(response.state)\n      }else{\n        setCity2('No info')\n        setState2('No info')\n      }\n    })\n  };\n  const appendTime = (date)=>{\n    date.setMinutes(date.getMinutes()+delay.minutes)\n    date.setHours(date.getHours()+delay.hours-5)\n    return date\n  }\nconst appendDays= (date, days)=>{\n  date.setDate(date.getDate()+days)\n  return date\n}\nconst makeOrderFn = () =>{\n  const url = '/ordenarpedido'\n  let data = {\n    usuario: localStorage.getItem('id'),\n    costo: pricePerKm,\n    estado: 'pendiente',\n    ciudadsalida: city,\n    ciudadllegada: city2,\n    estadosalida: state,\n    estadollegada: state2\n  }\n  if(arriveSameDay){\n    const date = new Date()\n    data.fechaArribo=appendTime(date)\n    console.log(JSON.stringify(date) )\n  }else{\n    \n    const date = new Date()\n    \n    data.fechaArribo=appendDays(date, delay)\n  }\n  sendData(JSON.stringify(data) , url).then((response)=>{\n    console.log(response)\n    if(response){\n      setOpenN('Creado exitosamente')\n      setTimeout(() => {\n        setOpenN(false)\n      }, 2000);\n    }else{\n      setOpenN('error servidor')\n      setTimeout(() => {\n        setOpenN(false)\n      }, 2000);\n    }\n  })\n  console.log(data)\n}\n  const StatusMessage = () => {\n    if (status === \"success\" ) {\n      return (\n          <div>\n           \n        <Typography variant=\"h5\" gutterBottom>\n          {`La distancia que recorrerá tu pedido es de ${distance} kms`}\n        </Typography>\n        {toll?<Typography>\n            {`Costo ${toll/0.25} peaje${toll>0.25?'s':''}: $${toll}`}\n        </Typography>:null}\n        \n        <Typography>\n            {`Costo por ${distance} Kilometro${distance>1?'s':''}: $${pricePerKm}`}\n        </Typography>\n        <Typography>\n            {`Costo Total: $${ total}`}\n        </Typography>\n        <Typography>\n            {`Tu pedido llegará en: `}{arriveSameDay?`${delay.hours} hora${delay.hours>1?'s':''} ${delay.minutes>0?`y ${delay.minutes} minuto${delay.minutes>1?'s':''}`:''}`:`${delay} dia${delay>1?'s':''}`}\n        </Typography>\n        <Typography variant=\"subtitle1\"> \n              {`Pedido desde ${city} en el estado de ${state}`}\n            </Typography>\n            <Typography variant=\"subtitle1\"> \n              {`Destino del pedido ${city2} en el estado de ${state2}`}\n            </Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={makeOrderFn}>\n          Realizar Pedido\n        </Button>\n        </div>\n      );\n    } else if (status === \"error\") {\n      return (<Typography>Los códigos postales no son correctos</Typography>);\n    }else{\n        return null\n    }\n  };\n  return (\n    <div style={{marginBlock:5}}>\n      <Button   variant=\"contained\" color=\"primary\" onClick={()=>getDistance()}>Consultar Pedido</Button>\n   \n      <StatusMessage />\n      <Notification status={openN}/>\n    </div>\n  );\n}\n","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\get.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\login\\login.js",["65","66","67","68"],"import React from \"react\";\nimport sendData from \"../../until/sendData\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles } from \"./styleLogin\";\nimport Notification from \"../notification/notification\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nconst options = [\n  \"@gmail.com\",\n  \"@outlook.com\",\n  \"@yahoo.com\",\n  \"@aol.com\",\n  \"@hotmail.com\",\n  \"@gmx.com\",\n  \"@yandex.com\",\n  \"@mail.com\",\n  \"@lycos.com\",\n];\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function LoginMaterial(props) {\n  const\n  [user, setUser] = React.useState(null),\n  [password, setPassword] = React.useState(false),\n    [redirect, setRedirect] = React.useState(\"login\"),\n    [name, setName] = React.useState(false),\n    [lastName, setLastName] = React.useState(false),\n    [email, setEmail] = React.useState(false),\n    [firstPassword, setFirstPassword] = React.useState(false),\n    [secondPassword, setSecondPassword] = React.useState(false),\n    [phone, setPhone] = React.useState(false),\n    [statusAu, setStatusAu] = React.useState(true),\n    [alreadyRegister, setAlreadyRegister] = React.useState(false),\n    [lowLevelSecurePass, setLowLevelSecurePass] = React.useState(false),\n    [openN, setOpenN] = React.useState('Creado exitosamente');\n    const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const handleChange = (event) => {\n    setUser(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value);\n  };\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  };\n  const handleChangeLastName = (event) => {\n    setLastName(event.target.value);\n  };\n  const handleChangeEmail = async (event) => {\n    let data;\n    const url = '/findEmail'\n    data = JSON.stringify({\n      correo: event.target.value,\n    });\n    if (event.target.value.length === 0) {\n      setEmail(\"\");\n    } else {\n      setEmail(event.target.value);\n    }\n\n    await sendData(data, url).then((data) => {\n      if (data) {\n        console.log('usuario registrado')\n        setAlreadyRegister(true);\n      } else {\n        console.log('usuario no registrado')\n        setAlreadyRegister(false);\n      }\n    });\n  };\n  const handleChangeFisrtPassword = (event) => {\n    const passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n    if (event.target.value.match(passw)) {\n      setLowLevelSecurePass(false);\n    } else {\n      setLowLevelSecurePass(true);\n    }\n    setFirstPassword(event.target.value);\n  };\n  const handleChangeSecondPassword = (event) => {\n    setSecondPassword(event.target.value);\n  };\n  const handleChangePhone = (event) => {\n    setPhone(event.target.value);\n  };\n  const handlechangelogin = (value) => {\n    setRedirect(value);\n  };\n  const setLocal = async () => {\n    const url = '/login'\n    const data = JSON.stringify({\n      correo: user,\n      contra: password,\n    });\n    await sendData(data, url).then((response) => {\n  \n        if (!response) {\n          setStatusAu(false);\n        } else {\n            localStorage.setItem(\"id\", response.datos[\"_id\"]);\n            localStorage.setItem(\"user\", String(response.datos[\"nombre\"]));\n            \n            window.location.reload();\n        }\n      \n    });\n  };\n\n  const setLocalRegister = () => {\n    \n    let data;\n    const url = '/createUser'\n    data = JSON.stringify({\n        nombre: name,\n        apellido: lastName,\n        telefono: phone,\n        correo: email,\n        contra: firstPassword,\n      });\n    sendData(data, url).then((data) => {\n        console.log(data)\n      if (data) {\n          console.log(data)\n        setRedirect(\"login\");\n        \n        setOpenN(\"Creado exitosamente\");\n        setTimeout(() => {\n            setOpenN(false)\n        }, 2000);\n      } else {\n        setOpenN(\"error servidor\");\n      }\n    });\n  };\n  const handleChangeOpenN = () =>{\n    setOpenN(openN?false:true)\n  }\n  const loginForm =\n    redirect === \"login\" ? (\n      <div className={classes.paper}>\n        <Typography\n          onClick={() => window.location.reload()}\n          style={{ cursor: \"pointer\" }}\n          className=\"Logo2\"\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          SM\n        </Typography>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography className=\"Logo2\" component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n\n        <form>\n          <div>\n            <TextField\n              error={!statusAu}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Correo\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={handleChange}\n            />\n            <TextField\n              error={!statusAu}\n              className=\"Pass\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Contraseña\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              helperText={\n                !statusAu ? \"Usuario o Contraseña Incorrectos\" : false\n              }\n              onChange={handleChangePassword}\n            />\n          </div>\n\n    \n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setLocal()}\n          >\n            Ingresar\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link\n                onClick={() => handlechangelogin(\"register\")}\n                variant=\"body2\"\n                style={{ cursor: \"pointer\" }}\n              >\n                {\"No tienes una cuenta, registrate aquí...\"}\n              </Link>\n            </Grid>\n          </Grid>\n\n          <Box mt={5}></Box>\n        </form>\n      </div>\n    ) : null;\n  const registerForm =\n    redirect === \"register\" ? (\n      <div className={classes.paper}>\n        <Typography\n          onClick={() => window.location.reload()}\n          style={{ cursor: \"pointer\" }}\n          className=\"Logo2\"\n          component=\"h1\"\n          variant=\"h5\"\n        >\n          SM\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography className=\"Logo2\" component=\"h1\" variant=\"h5\">\n          Registro\n        </Typography>\n        <form>\n          <TextField\n            error={name.length >= 25 || name.length === 0 ? true : false}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Nombres\"\n            name=\"name\"\n            autoComplete=\"name\"\n            onChange={handleChangeName}\n            inputProps={{ maxLength: 25 }}\n            helperText={\n              name.length >= 25 ? \"Tienes un máximo de 25 letras\" : null\n            }\n          />\n          <TextField\n            error={\n              lastName.length >= 25 || lastName.length === 0 ? true : false\n            }\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"lastName\"\n            label=\"Apellidos\"\n            name=\"lastName\"\n            autoComplete=\"additional-name\"\n            onChange={handleChangeLastName}\n            inputProps={{ maxLength: 25 }}\n            helperText={\n              lastName.length >= 25 ? \"Tienes un máximo de 25 letras\" : null\n            }\n          />\n          <TextField\n            error={phone.length >= 10 || phone.length === 0 ? true : false}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"phone\"\n            label=\"Teléfono\"\n            name=\"phone\"\n            autoComplete=\"tel\"\n            onChange={handleChangePhone}\n            inputProps={{ maxLength: 10 }}\n            helperText={\n              phone.length >= 10 ? \"Tienes un máximo de 10 numeros\" : null\n            }\n          />\n          \n         \n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                error={\n                  alreadyRegister || email.length >= 30 || email.length === 0\n                }\n                helperText={\n                  alreadyRegister ? \"El correo ya ha sido registrado.\" : null\n                }\n                label=\"Correo\"\n                \n                \n                id=\"outlined-adornment-weight\"\n                inputProps={{ maxLength: 80 }}\n                onChange={handleChangeEmail}\n               \n                // aria-describedby=\"outlined-weight-helper-text\"\n              />\n     \n          <TextField\n            error={\n              lowLevelSecurePass ||\n              firstPassword.length >= 30 ||\n              firstPassword.length === 0\n            }\n            className=\"Pass\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Contraseña\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChangeFisrtPassword}\n            helperText={\n              lowLevelSecurePass\n                ? \"La contraseña debe tener entre 7 y 15 caracteres que contengan al menos un dígito numérico y un carácter especial\"\n                : null\n            }\n            inputProps={{ maxLength: 30 }}\n          />\n          <TextField\n            error={\n              secondPassword.length >= 30 ||\n              secondPassword.length === 0 ||\n              (secondPassword && firstPassword !== secondPassword)\n            }\n            className=\"Pass\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Repite la contraseña\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            helperText={\n              secondPassword && firstPassword !== secondPassword\n                ? \"Las contraseñas no coinciden\"\n                : null\n            }\n            onChange={handleChangeSecondPassword}\n            inputProps={{ maxLength: 30 }}\n          />\n          {!name ||\n    \n          !lastName ||\n          !phone ||\n          !email ||\n          !firstPassword ||\n          !secondPassword ||\n          alreadyRegister ||\n          name.length === 0 ||\n          lastName.length === 0 ||\n          phone.length === 0 ||\n          email.length === 0 ||\n          lowLevelSecurePass ||\n          firstPassword.length === 0 ||\n          secondPassword.length === 0 ||\n          (secondPassword && firstPassword !== secondPassword) ? null : (\n            <Button\n              // type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => setLocalRegister()}\n            >\n              Registrarse\n            </Button>\n          )}\n\n          <Grid container>\n            <Grid item>\n              <Link onClick={() => handlechangelogin(\"login\")} variant=\"body2\">\n                {\"Ya tienes una cuenta?\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Box mt={5}></Box>\n        </form>\n      </div>\n    ) : null;\n  return (\n    <>\n      <Grid fullscreen container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          {loginForm}\n          {registerForm}\n       \n        </Grid>\n      </Grid>\n       {openN?(<Notification status={openN} eventOpenN={setOpenN(false)}/>):null}\n    </>\n  );\n}\n","C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\list\\list.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\sendData.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\login\\styleLogin.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\until\\getData.js",[],"C:\\Users\\david\\Desktop\\Software 7\\Aplicaciones Distribuidas\\pFinal\\pleafletv1\\src\\components\\notification\\notification.js",["69","70","71","72"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\nimport MuiAlert from '@material-ui/lab/Alert';\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function Notification(props) {\n  const [state, setState] = React.useState({\n    open: true,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({\n      open: true,\n      Transition,\n    });\n  };\n\n  const handleClose = () => {\n    setState({\n      ...state,\n      open: false,\n    });\n  };\nif(props.status===\"Creado exitosamente\"){\n    return (\n        <div>\n    \n          <Snackbar\n            open={props.status}\n            \n            TransitionComponent={state.Transition}\n           \n            key={state.Transition.name}\n          >\n                 <Alert onClose={handleClose} severity=\"success\">\n              Generado ecitosamente\n            </Alert>\n          </Snackbar>\n        </div>\n      );\n}else if(props.status==='error servidor'){\n    return (\n        <div>\n          <Snackbar\n            open={props.status}\n   \n            TransitionComponent={state.Transition}\n           \n            key={state.Transition.name}\n          >\n                 <Alert severity=\"error\" >Error</Alert>\n          </Snackbar>\n        </div>\n      );\n}else{\n    return null\n}\n\n}\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":36,"column":10,"nodeType":"79","messageId":"80","endLine":36,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":36,"column":16,"nodeType":"79","messageId":"80","endLine":36,"endColumn":23},{"ruleId":"77","severity":1,"message":"82","line":46,"column":6,"nodeType":"79","messageId":"80","endLine":46,"endColumn":14},{"ruleId":"77","severity":1,"message":"83","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":26},{"ruleId":"77","severity":1,"message":"84","line":26,"column":6,"nodeType":"79","messageId":"80","endLine":26,"endColumn":13},{"ruleId":"77","severity":1,"message":"85","line":26,"column":15,"nodeType":"79","messageId":"80","endLine":26,"endColumn":25},{"ruleId":"77","severity":1,"message":"86","line":29,"column":9,"nodeType":"79","messageId":"80","endLine":29,"endColumn":16},{"ruleId":"77","severity":1,"message":"87","line":18,"column":7,"nodeType":"79","messageId":"80","endLine":18,"endColumn":14},{"ruleId":"77","severity":1,"message":"88","line":30,"column":10,"nodeType":"79","messageId":"80","endLine":30,"endColumn":15},{"ruleId":"77","severity":1,"message":"89","line":51,"column":9,"nodeType":"79","messageId":"80","endLine":51,"endColumn":19},{"ruleId":"77","severity":1,"message":"90","line":151,"column":9,"nodeType":"79","messageId":"80","endLine":151,"endColumn":26},{"ruleId":"77","severity":1,"message":"91","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"92","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":25},{"ruleId":"77","severity":1,"message":"93","line":14,"column":10,"nodeType":"79","messageId":"80","endLine":14,"endColumn":24},{"ruleId":"77","severity":1,"message":"94","line":24,"column":9,"nodeType":"79","messageId":"80","endLine":24,"endColumn":20},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","'setOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'MonetizationOnIcon' is defined but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'classes' is assigned a value but never used.","'options' is assigned a value but never used.","'Alert' is defined but never used.","'fullScreen' is assigned a value but never used.","'handleChangeOpenN' is assigned a value but never used.","'Button' is defined but never used.","'SlideTransition' is defined but never used.","'GrowTransition' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]